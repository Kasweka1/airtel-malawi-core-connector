# CircleCI configuration file
# Mojaloop build Orb
version: 2.1

# setup: true
orbs:
  build: mojaloop/build@1.0.64

jobs:
  build_local_fixed:
    description: Builds a local Docker image of the project (patched version)
    machine: true
    environment:
      MAIN_BRANCH_NAME: main
    steps:
      - checkout
      - run:
          name: Setup .nvmrc and Node version
          command: |
            if [ -f .nvmrc ]; then
              export NVMRC_VERSION=$(cat .nvmrc)
              echo "export NVMRC_VERSION=$NVMRC_VERSION" >> $BASH_ENV
            else
              echo "No .nvmrc file found"
              exit 1
            fi
      - run:
          name: Build Docker local image (patched)
          command: |
            source $BASH_ENV
            export DOCKER_NODE_VERSION="$NVMRC_VERSION-alpine3.21"

            export SANITIZED_NAME=$(echo "$CIRCLE_PROJECT_REPONAME" \
            | tr '[:upper:]' '[:lower:]' \
            | tr '[:space:]' '-' \
            | tr -cd '[:alnum:]._-' \
            | sed 's/-*$//')


            echo "Building Docker image: ${DOCKER_ORG:-mojaloop}/$SANITIZED_NAME:local with NODE_VERSION=$DOCKER_NODE_VERSION"

            docker build -t ${DOCKER_ORG:-mojaloop}/$SANITIZED_NAME:local --build-arg NODE_VERSION=$DOCKER_NODE_VERSION .
      - run:
          name: Save docker image to workspace
          command: |
            # Sanitize repo name to lowercase, same logic as before
            export SANITIZED_NAME=$(echo "$CIRCLE_PROJECT_REPONAME" \
              | tr '[:upper:]' '[:lower:]' \
              | tr '[:space:]' '-' \
              | tr -cd '[:alnum:]._-' \
              | sed 's/-*$//')

            docker save -o /tmp/docker-image.tar ${DOCKER_ORG:-mojaloop}/$SANITIZED_NAME:local
      - persist_to_workspace:
          root: /tmp
          paths:
            - docker-image.tar


workflows:
  checks:
    jobs:
      - build/pr_title_check:
          name: PR title
          filters:
            branches:
              ignore:
                - main
                - master
  build_and_test:
    jobs:
      - build/setup:
          name: Setup
          filters: &setup-filter
            branches:
              ignore:
                - /feature/*
                - /bugfix/*
            tags:  &setup-tags
              only: /v\d+(\.\d+){2}(-[a-zA-Z-][0-9a-zA-Z-]*\.\d+)?/
          context: org-global

      - build/test_dependencies:
          name: Dependencies
          filters:
            branches:
              ignore:
                - main
                - master
          requires:
            - Setup
      - build/test_deprecations:
          name: Deprecations
          filters: *setup-filter
          requires:
            - Setup
      - build/test_lint: &test-condition
          name: Lint
          filters: *setup-filter
          requires:
            - Setup
      - build/test_unit:
          name: Unit
          requires:
            - Setup
      -  build_local_fixed:
          name: Build
          filters:
            branches:
              only:
                - main
          requires:
            - Setup
          context: org-global
      
